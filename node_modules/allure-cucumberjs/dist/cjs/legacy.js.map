{"version":3,"file":"legacy.js","names":["_cucumber","require","allure","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","AllureCucumberWorld","World","constructor","arguments","name","Promise","resolve","label","type","url","link","options","parameter","description","html","descriptionHtml","id","testCaseId","historyId","allureId","displayName","content","attachment","contentType","issue","tms","epic","feature","story","suite","parentSuite","subSuite","owner","severity","layer","tag","body","step","exports"],"sources":["../../src/legacy.ts"],"sourcesContent":["import { World } from \"@cucumber/cucumber\";\nimport * as allure from \"allure-js-commons\";\nimport type { ParameterOptions } from \"allure-js-commons\";\n\n/**\n * @deprecated please use api exported by \"allure-js-commons\" instead.\n */\nexport interface AllureCucumberLegacyApi {\n  label: (name: string, value: string) => Promise<void>;\n  link: (type: string, url: string, name?: string) => Promise<void>;\n  parameter: (name: string, value: string, options?: ParameterOptions) => Promise<void>;\n  description: (markdown: string) => Promise<void>;\n  descriptionHtml: (html: string) => Promise<void>;\n  testCaseId: (id: string) => Promise<void>;\n  historyId: (id: string) => Promise<void>;\n  allureId: (id: string) => Promise<void>;\n  displayName: (name: string) => Promise<void>;\n  attachment: (name: string, content: Buffer | string, type: string) => Promise<void>;\n  issue: (name: string, url: string) => Promise<void>;\n  tms: (name: string, url: string) => Promise<void>;\n  epic: (name: string) => Promise<void>;\n  feature: (name: string) => Promise<void>;\n  story: (name: string) => Promise<void>;\n  suite: (name: string) => Promise<void>;\n  parentSuite: (name: string) => Promise<void>;\n  subSuite: (name: string) => Promise<void>;\n  owner: (name: string) => Promise<void>;\n  severity: (name: string) => Promise<void>;\n  layer: (name: string) => Promise<void>;\n  tag: (name: string) => Promise<void>;\n  step: (name: string, body: () => Promise<void>) => Promise<void>;\n}\n\n/**\n * @deprecated please use api exported by \"allure-js-commons\" instead.\n */\nexport class AllureCucumberWorld extends World implements AllureCucumberLegacyApi {\n  /**\n   * @deprecated please use import { label } from \"allure-js-commons\" instead.\n   */\n  label = (name: string, value: string) => Promise.resolve(allure.label(name, value));\n  /**\n   * @deprecated please use import { link } from \"allure-js-commons\" instead.\n   */\n  link = (type: string, url: string, name?: string) => Promise.resolve(allure.link(url, name, type));\n  /**\n   * @deprecated please use import { parameter } from \"allure-js-commons\" instead.\n   */\n  parameter = (name: string, value: string, options?: ParameterOptions) =>\n    Promise.resolve(allure.parameter(name, value, options));\n  /**\n   * @deprecated please use import { description } from \"allure-js-commons\" instead.\n   */\n  description = (value: string) => Promise.resolve(allure.description(value));\n  /**\n   * @deprecated please use import { descriptionHtml } from \"allure-js-commons\" instead.\n   */\n  descriptionHtml = (html: string) => Promise.resolve(allure.descriptionHtml(html));\n  /**\n   * @deprecated please use import { testCaseId } from \"allure-js-commons\" instead.\n   */\n  testCaseId = (id: string) => Promise.resolve(allure.testCaseId(id));\n  /**\n   * @deprecated please use import { historyId } from \"allure-js-commons\" instead.\n   */\n  historyId = (id: string) => Promise.resolve(allure.historyId(id));\n  /**\n   * @deprecated please use import { allureId } from \"allure-js-commons\" instead.\n   */\n  allureId = (id: string) => Promise.resolve(allure.allureId(id));\n  /**\n   * @deprecated please use import { displayName } from \"allure-js-commons\" instead.\n   */\n  displayName = (name: string) => Promise.resolve(allure.displayName(name));\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  attachment = (name: string, content: Buffer | string, type: string) =>\n    Promise.resolve(allure.attachment(name, content, { contentType: type }));\n  /**\n   * @deprecated please use import { issue } from \"allure-js-commons\" instead.\n   */\n  issue = (name: string, url: string) => Promise.resolve(allure.issue(url, name));\n  /**\n   * @deprecated please use import { tms } from \"allure-js-commons\" instead.\n   */\n  tms = (name: string, url: string) => Promise.resolve(allure.tms(url, name));\n  /**\n   * @deprecated please use import { epic } from \"allure-js-commons\" instead.\n   */\n  epic = (name: string) => Promise.resolve(allure.epic(name));\n  /**\n   * @deprecated please use import { feature } from \"allure-js-commons\" instead.\n   */\n  feature = (name: string) => Promise.resolve(allure.feature(name));\n  /**\n   * @deprecated please use import { story } from \"allure-js-commons\" instead.\n   */\n  story = (name: string) => Promise.resolve(allure.story(name));\n  /**\n   * @deprecated please use import { suite } from \"allure-js-commons\" instead.\n   */\n  suite = (name: string) => Promise.resolve(allure.suite(name));\n  /**\n   * @deprecated please use import { parentSuite } from \"allure-js-commons\" instead.\n   */\n  parentSuite = (name: string) => Promise.resolve(allure.parentSuite(name));\n  /**\n   * @deprecated please use import { subSuite } from \"allure-js-commons\" instead.\n   */\n  subSuite = (name: string) => Promise.resolve(allure.subSuite(name));\n  /**\n   * @deprecated please use import { owner } from \"allure-js-commons\" instead.\n   */\n  owner = (name: string) => Promise.resolve(allure.owner(name));\n  /**\n   * @deprecated please use import { severity } from \"allure-js-commons\" instead.\n   */\n  severity = (name: string) => Promise.resolve(allure.severity(name));\n  /**\n   * @deprecated please use import { layer } from \"allure-js-commons\" instead.\n   */\n  layer = (name: string) => Promise.resolve(allure.layer(name));\n  /**\n   * @deprecated please use import { tag } from \"allure-js-commons\" instead.\n   */\n  tag = (name: string) => Promise.resolve(allure.tag(name));\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  step = (name: string, body: () => any) => Promise.resolve(allure.step(name, body));\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"reporter.js","names":["Formatter","World","TimeConversion","AttachmentContentEncoding","TestStepResultStatus","extname","ContentType","LabelName","Stage","Status","getMessageAndTraceFromError","getStatusFromError","ALLURE_RUNTIME_MESSAGE_CONTENT_TYPE","ReporterRuntime","applyLinkTemplate","createDefaultWriter","createStepResult","getEnvironmentLabels","getFrameworkLabel","getHostLabel","getLanguageLabel","getPackageLabel","getThreadLabel","getWorstTestStepResult","md5","AllureCucumberWorld","getPathRelativeToProjectRoot","getPosixPathRelativeToProjectRoot","AllureCucumberReporter","constructor","options","_defineProperty","Map","_ref","parsedArgvOptions","resultsDir","links","labels","rest","_objectWithoutProperties","_excluded","allureRuntime","_objectSpread","writer","linksConfigs","labelsConfigs","eventBroadcaster","on","parseEnvelope","bind","beforeHooks","supportCodeLibrary","beforeTestCaseHookDefinitions","reduce","acc","hook","Object","assign","id","afterHooks","afterTestCaseHookDefinitions","tagsIgnorePatterns","linkConfigEntries","entries","map","_ref2","v","flatMap","_ref3","pattern","envelope","gherkinDocument","onGherkinDocument","pickle","onPickle","testCase","onTestCase","testCaseStarted","onTestCaseStarted","testCaseFinished","onTestCaseFinished","attachment","onAttachment","testStepStarted","onTestStepStarted","testStepFinished","onTestStepFinished","testRunFinished","onTestRunFinished","parseTagsLabels","tags","length","forEach","matcher","matchedTags","filter","tag","some","test","name","matchedLabels","tagValue","replace","value","push","parsePickleTags","TAG","parseTagsLinks","tagKeyRe","keys","_ref4","type","matchedLinks","url","urlTemplate","parseStatus","stepResult","error","exceptionToError","message","exception","status","FAILED","PASSED","SKIPPED","PENDING","undefined","onRule","data","_data$children","children","c","scenario","onScenario","_data$feature","uri","documentMap","set","feature","rule","scenarioMap","steps","step","stepMap","pickleMap","ps","pickleStepMap","testCaseMap","testSteps","ts","testStepMap","_scenario$name","_doc$feature","_doc$feature2","_doc$feature3","_doc$feature4","_this","get","testCaseId","pickleId","doc","scenarioId","astIds","astNodeIds","posixPath","fullName","concat","result","description","trim","start","timestampToMillisecondsSinceEpoch","timestamp","workerId","FEATURE","pickleLabels","featureLabels","featureLinks","scenarioLabels","scenarioLinks","titlePath","split","slice","Boolean","scopeUuid","startScope","scopeUuids","testUuid","startTest","testResultUuids","testCaseStartedMap","examples","_loop","_example$tableHeader","_example$tableBody","exampleName","example","parameterNames","tableHeader","cells","cell","csvDataTableHeader","join","currentRow","tableBody","find","tb","includes","parameters","index","paramName","paramValue","updateTest","tr","csvDataTableBody","row","csvDataTable","writeAttachment","Buffer","from","contentType","CSV","fileExtension","testCaseStartedId","_step$status","stage","FINISHED","statusDetails","stopTest","stop","writeTest","delete","writeScope","_stepPickle$argument","testStepId","hookId","beforeHook","afterHook","fixtureUuid","startFixture","RUNNING","fixtureUuids","pickleStepId","stepPickle","stepKeyword","astNodeId","stepAstNode","keyword","stepUuid","startStep","text","argument","dataTable","rows","testStepResult","updateFixture","r","stopFixture","currentStep","updateStep","stopStep","_message$fileName","rootUuid","mediaType","parsedMessage","JSON","parse","body","applyRuntimeMessages","Array","isArray","encoding","contentEncoding","BASE64","fileName","content","toString","wrapInStep","writeCategoriesDefinitions","writeEnvironmentInfo","stack","stackTrace"],"sources":["../../src/reporter.ts"],"sourcesContent":["import type { IFormatterOptions, TestCaseHookDefinition } from \"@cucumber/cucumber\";\nimport { Formatter, World } from \"@cucumber/cucumber\";\nimport type * as messages from \"@cucumber/messages\";\nimport { TimeConversion } from \"@cucumber/messages\";\nimport {\n  AttachmentContentEncoding,\n  type PickleTag,\n  type Tag,\n  type TestStepResult,\n  TestStepResultStatus,\n} from \"@cucumber/messages\";\nimport { extname } from \"node:path\";\nimport type { Label, Link, TestResult } from \"allure-js-commons\";\nimport { ContentType, LabelName, Stage, Status } from \"allure-js-commons\";\nimport { getMessageAndTraceFromError, getStatusFromError } from \"allure-js-commons/sdk\";\nimport {\n  ALLURE_RUNTIME_MESSAGE_CONTENT_TYPE,\n  ReporterRuntime,\n  applyLinkTemplate,\n  createDefaultWriter,\n  createStepResult,\n  getEnvironmentLabels,\n  getFrameworkLabel,\n  getHostLabel,\n  getLanguageLabel,\n  getPackageLabel,\n  getThreadLabel,\n  getWorstTestStepResult,\n  md5,\n} from \"allure-js-commons/sdk/reporter\";\nimport { AllureCucumberWorld } from \"./legacy.js\";\nimport type { AllureCucumberLinkConfig, AllureCucumberReporterConfig, LabelConfig } from \"./model.js\";\nimport { getPathRelativeToProjectRoot, getPosixPathRelativeToProjectRoot } from \"./utils.js\";\n\nexport default class AllureCucumberReporter extends Formatter {\n  private readonly afterHooks: Record<string, TestCaseHookDefinition> = {};\n  private readonly beforeHooks: Record<string, TestCaseHookDefinition> = {};\n\n  private linksConfigs: AllureCucumberLinkConfig = {};\n  private labelsConfigs: LabelConfig[] = [];\n  private allureRuntime: ReporterRuntime;\n\n  private readonly documentMap: Map<string, messages.GherkinDocument> = new Map();\n  private readonly scenarioMap: Map<string, messages.Scenario> = new Map();\n  private readonly stepMap: Map<string, messages.Step> = new Map();\n  private readonly testStepMap: Map<string, messages.TestStep> = new Map();\n  private readonly pickleStepMap: Map<string, messages.PickleStep> = new Map();\n  private readonly pickleMap: Map<string, messages.Pickle> = new Map();\n  private readonly testCaseMap: Map<string, messages.TestCase> = new Map();\n  private readonly testCaseStartedMap: Map<string, messages.TestCaseStarted> = new Map();\n  private readonly testResultUuids: Map<string, string> = new Map();\n  private readonly scopeUuids: Map<string, string> = new Map();\n  private readonly fixtureUuids: Map<string, string> = new Map();\n\n  constructor(options: IFormatterOptions) {\n    super(options);\n\n    const { resultsDir, links, labels, ...rest } = options.parsedArgvOptions as AllureCucumberReporterConfig;\n\n    this.allureRuntime = new ReporterRuntime({\n      writer: createDefaultWriter({ resultsDir }),\n      links,\n      ...rest,\n    });\n    this.linksConfigs = links || {};\n    this.labelsConfigs = labels || [];\n\n    options.eventBroadcaster.on(\"envelope\", this.parseEnvelope.bind(this));\n\n    this.beforeHooks = options.supportCodeLibrary.beforeTestCaseHookDefinitions.reduce(\n      (acc, hook) => Object.assign(acc, { [hook.id]: hook }),\n      {},\n    );\n    this.afterHooks = options.supportCodeLibrary.afterTestCaseHookDefinitions.reduce(\n      (acc, hook) => Object.assign(acc, { [hook.id]: hook }),\n      {},\n    );\n    // set AllureCucumberWorld for single thread mode\n    if (options.supportCodeLibrary.World === World) {\n      // @ts-ignore\n      // noinspection JSConstantReassignment\n      options.supportCodeLibrary.World = AllureCucumberWorld;\n    }\n  }\n\n  private get tagsIgnorePatterns(): RegExp[] {\n    const { labelsConfigs, linksConfigs } = this;\n    const linkConfigEntries = Object.entries(linksConfigs).map(([, v]) => v);\n    return [...labelsConfigs, ...linkConfigEntries].flatMap(({ pattern }) => pattern);\n  }\n\n  private parseEnvelope(envelope: messages.Envelope) {\n    switch (true) {\n      case !!envelope.gherkinDocument:\n        this.onGherkinDocument(envelope.gherkinDocument);\n        break;\n      case !!envelope.pickle:\n        this.onPickle(envelope.pickle);\n        break;\n      case !!envelope.testCase:\n        this.onTestCase(envelope.testCase);\n        break;\n      case !!envelope.testCaseStarted:\n        this.onTestCaseStarted(envelope.testCaseStarted);\n        break;\n      case !!envelope.testCaseFinished:\n        this.onTestCaseFinished(envelope.testCaseFinished);\n        break;\n      case !!envelope.attachment:\n        this.onAttachment(envelope.attachment);\n        break;\n      case !!envelope.testStepStarted:\n        this.onTestStepStarted(envelope.testStepStarted);\n        break;\n      case !!envelope.testStepFinished:\n        this.onTestStepFinished(envelope.testStepFinished);\n        break;\n      case !!envelope.testRunFinished:\n        this.onTestRunFinished();\n        break;\n    }\n  }\n\n  private parseTagsLabels(tags: readonly Tag[]): Label[] {\n    const labels: Label[] = [];\n\n    if (this.labelsConfigs.length === 0) {\n      return labels;\n    }\n\n    this.labelsConfigs.forEach((matcher) => {\n      const matchedTags = tags.filter((tag) => matcher.pattern.some((pattern) => pattern.test(tag.name)));\n      const matchedLabels = matchedTags.map((tag) => {\n        const tagValue = tag.name.replace(/^@\\S+:/, \"\");\n\n        return {\n          name: matcher.name,\n          value: tagValue,\n        };\n      });\n\n      labels.push(...matchedLabels);\n    });\n\n    return labels;\n  }\n\n  private parsePickleTags(tags: readonly PickleTag[]): Label[] {\n    return tags\n      .filter((tag) => !this.tagsIgnorePatterns.some((pattern) => pattern.test(tag.name)))\n      .map((tag) => ({\n        name: LabelName.TAG,\n        value: tag.name,\n      }));\n  }\n\n  private parseTagsLinks(tags: readonly Tag[]): Link[] {\n    const tagKeyRe = /^@\\S+=/;\n    const links: Link[] = [];\n\n    if (Object.keys(this.linksConfigs).length === 0) {\n      return links;\n    }\n\n    Object.entries(this.linksConfigs).forEach(([type, matcher]) => {\n      const matchedTags = tags.filter((tag) => matcher.pattern.some((pattern) => pattern.test(tag.name)));\n      const matchedLinks = matchedTags.map((tag) => {\n        const tagValue = tag.name.replace(tagKeyRe, \"\");\n\n        return {\n          url: applyLinkTemplate(matcher.urlTemplate, tagValue) || tagValue,\n          type,\n        };\n      });\n\n      links.push(...matchedLinks);\n    });\n\n    return links;\n  }\n\n  private parseStatus(stepResult: TestStepResult): Status | undefined {\n    const error = this.exceptionToError(stepResult.message, stepResult.exception);\n    switch (stepResult.status) {\n      case TestStepResultStatus.FAILED:\n        return error ? getStatusFromError(error) : Status.FAILED;\n      case TestStepResultStatus.PASSED:\n        return Status.PASSED;\n      case TestStepResultStatus.SKIPPED:\n      case TestStepResultStatus.PENDING:\n        return Status.SKIPPED;\n      default:\n        return undefined;\n    }\n  }\n\n  private onRule(data: messages.Rule): void {\n    data.children?.forEach((c) => {\n      if (c.scenario) {\n        this.onScenario(c.scenario);\n      }\n    });\n  }\n\n  private onGherkinDocument(data: messages.GherkinDocument): void {\n    if (data.uri) {\n      this.documentMap.set(data.uri, data);\n    }\n\n    data.feature?.children?.forEach((c) => {\n      if (c.rule) {\n        this.onRule(c.rule);\n      } else if (c.scenario) {\n        this.onScenario(c.scenario);\n      }\n    });\n  }\n\n  private onScenario(data: messages.Scenario): void {\n    this.scenarioMap.set(data.id, data);\n    data.steps.forEach((step) => this.stepMap.set(step.id, step));\n  }\n\n  private onPickle(data: messages.Pickle): void {\n    this.pickleMap.set(data.id, data);\n    data.steps.forEach((ps) => this.pickleStepMap.set(ps.id, ps));\n  }\n\n  private onTestCase(data: messages.TestCase): void {\n    this.testCaseMap.set(data.id, data);\n    data.testSteps.forEach((ts) => this.testStepMap.set(ts.id, ts));\n  }\n\n  private onTestCaseStarted(data: messages.TestCaseStarted) {\n    const testCase = this.testCaseMap.get(data.testCaseId)!;\n    const pickle = this.pickleMap.get(testCase.pickleId)!;\n    const doc = this.documentMap.get(pickle.uri)!;\n    const [scenarioId, ...astIds] = pickle.astNodeIds;\n    const scenario = this.scenarioMap.get(scenarioId);\n\n    const posixPath = getPosixPathRelativeToProjectRoot(pickle);\n    const fullName = `${posixPath}#${pickle.name}`;\n    const testCaseId = md5(`${posixPath}#${scenario?.name ?? pickle.name}`);\n    const result: Partial<TestResult> = {\n      name: pickle.name,\n      description: (scenario?.description || doc?.feature?.description || \"\").trim(),\n      labels: [],\n      links: [],\n      start: TimeConversion.timestampToMillisecondsSinceEpoch(data.timestamp),\n      testCaseId,\n      fullName,\n    };\n\n    result.labels!.push(...getEnvironmentLabels());\n    result.labels!.push(\n      getLanguageLabel(),\n      getFrameworkLabel(\"cucumberjs\"),\n      getPackageLabel(getPathRelativeToProjectRoot(pickle)),\n      getHostLabel(),\n      getThreadLabel(data.workerId),\n    );\n\n    if (doc?.feature) {\n      result.labels!.push({\n        name: LabelName.FEATURE,\n        value: doc.feature.name,\n      });\n    }\n\n    const pickleLabels = this.parsePickleTags(pickle.tags || []);\n    const featureLabels = this.parseTagsLabels(doc?.feature?.tags || []);\n    const featureLinks = this.parseTagsLinks(doc?.feature?.tags || []);\n    const scenarioLabels = this.parseTagsLabels(scenario?.tags || []);\n    const scenarioLinks = this.parseTagsLinks(scenario?.tags || []);\n\n    // remove feature file name from the title path\n    result.titlePath = posixPath\n      .split(\"/\")\n      .slice(0, -1)\n      .concat([doc?.feature?.name].filter(Boolean) as string[]);\n    result.labels!.push(...featureLabels, ...scenarioLabels, ...pickleLabels);\n    result.links!.push(...featureLinks, ...scenarioLinks);\n\n    const scopeUuid = this.allureRuntime.startScope();\n\n    this.scopeUuids.set(data.id, scopeUuid);\n\n    const testUuid = this.allureRuntime.startTest(result, [scopeUuid]);\n\n    this.testResultUuids.set(data.id, testUuid);\n\n    this.testCaseStartedMap.set(data.id, data);\n\n    if (!scenario?.examples) {\n      return;\n    }\n\n    for (const example of scenario.examples) {\n      const exampleName = example?.name ? `Examples: ${example.name}` : \"Examples\";\n      const parameterNames = example?.tableHeader?.cells.map((cell) => cell.value);\n      const csvDataTableHeader = parameterNames?.join(\",\") || \"\";\n\n      const currentRow = example?.tableBody?.find((tb) => astIds.includes(tb.id));\n      if (currentRow) {\n        const parameters = currentRow.cells.map((cell, index) => {\n          const paramName = parameterNames && parameterNames.length > index ? parameterNames[index] : `arg${index}`;\n          const paramValue = cell.value;\n          return {\n            name: paramName,\n            value: paramValue,\n          };\n        });\n\n        this.allureRuntime.updateTest(testUuid, (tr) => (tr.parameters = [...tr.parameters, ...parameters]));\n      }\n\n      const csvDataTableBody =\n        example?.tableBody.map((row) => row.cells.map((cell) => cell.value).join(\",\")).join(\"\\n\") || \"\";\n\n      if (!csvDataTableHeader && !csvDataTableBody) {\n        continue;\n      }\n\n      const csvDataTable = `${csvDataTableHeader}\\n${csvDataTableBody}\\n`;\n\n      this.allureRuntime.writeAttachment(testUuid, null, exampleName, Buffer.from(csvDataTable, \"utf-8\"), {\n        contentType: ContentType.CSV,\n        fileExtension: \".csv\",\n      });\n    }\n  }\n\n  private onTestCaseFinished(data: messages.TestCaseFinished) {\n    const testUuid = this.testResultUuids.get(data.testCaseStartedId);\n    if (!testUuid) {\n      return;\n    }\n\n    this.allureRuntime.updateTest(testUuid, (result) => {\n      const step = getWorstTestStepResult(result.steps);\n      result.status = step?.status ?? Status.PASSED;\n      result.stage = Stage.FINISHED;\n\n      if (step) {\n        if (step.status === undefined) {\n          result.statusDetails = {\n            message: \"The test doesn't have an implementation.\",\n          };\n        } else {\n          result.statusDetails = {\n            ...result.statusDetails,\n            ...step.statusDetails,\n          };\n        }\n      }\n    });\n    this.allureRuntime.stopTest(testUuid, { stop: TimeConversion.timestampToMillisecondsSinceEpoch(data.timestamp) });\n    this.allureRuntime.writeTest(testUuid);\n    this.testResultUuids.delete(data.testCaseStartedId);\n\n    const scopeUuid = this.scopeUuids.get(data.testCaseStartedId);\n    if (scopeUuid) {\n      this.allureRuntime.writeScope(scopeUuid);\n      this.scopeUuids.delete(data.testCaseStartedId);\n    }\n  }\n\n  private onTestStepStarted(data: messages.TestStepStarted) {\n    const testUuid = this.testResultUuids.get(data.testCaseStartedId)!;\n    const step = this.testStepMap.get(data.testStepId)!;\n    if (step.hookId) {\n      const scopeUuid = this.scopeUuids.get(data.testCaseStartedId);\n      if (!scopeUuid) {\n        return;\n      }\n\n      const beforeHook = step.hookId && this.beforeHooks[step.hookId];\n      const afterHook = step.hookId && this.afterHooks[step.hookId];\n\n      const type = beforeHook ? \"before\" : afterHook ? \"after\" : undefined;\n      if (!type) {\n        return;\n      }\n      const name = beforeHook ? beforeHook.name : afterHook ? afterHook.name : \"hook\";\n      if (name === \"ALLURE_FIXTURE_IGNORE\") {\n        return;\n      }\n\n      const fixtureUuid = this.allureRuntime.startFixture(scopeUuid, type, {\n        name,\n        stage: Stage.RUNNING,\n        start: TimeConversion.timestampToMillisecondsSinceEpoch(data.timestamp),\n      });\n      if (fixtureUuid) {\n        this.fixtureUuids.set(data.testCaseStartedId, fixtureUuid);\n      }\n      return;\n    }\n\n    if (!step.pickleStepId) {\n      return;\n    }\n\n    const stepPickle = this.pickleStepMap.get(step.pickleStepId)!;\n\n    if (!stepPickle) {\n      return;\n    }\n\n    const stepKeyword =\n      stepPickle.astNodeIds\n        .map((astNodeId) => this.stepMap.get(astNodeId))\n        .map((stepAstNode) => stepAstNode?.keyword)\n        .find((keyword) => keyword !== undefined) || \"\";\n\n    const stepUuid = this.allureRuntime.startStep(testUuid, undefined, {\n      ...createStepResult(),\n      name: `${stepKeyword}${stepPickle.text}`,\n      start: TimeConversion.timestampToMillisecondsSinceEpoch(data.timestamp),\n    });\n\n    if (!stepPickle.argument?.dataTable) {\n      return;\n    }\n\n    const csvDataTable = stepPickle.argument.dataTable.rows.reduce(\n      (acc, row) => `${acc + row.cells.map((cell) => cell.value).join(\",\")}\\n`,\n      \"\",\n    );\n\n    this.allureRuntime.writeAttachment(testUuid, stepUuid, \"Data table\", Buffer.from(csvDataTable, \"utf-8\"), {\n      contentType: ContentType.CSV,\n      fileExtension: \".csv\",\n    });\n  }\n\n  private onTestStepFinished(data: messages.TestStepFinished) {\n    const step = this.testStepMap.get(data.testStepId);\n    if (!step) {\n      return;\n    }\n\n    const status = this.parseStatus(data.testStepResult);\n    const stage = status !== Status.SKIPPED ? Stage.FINISHED : Stage.PENDING;\n    const error = this.exceptionToError(data.testStepResult.message, data.testStepResult.exception);\n\n    if (step.hookId) {\n      const fixtureUuid = this.fixtureUuids.get(data.testCaseStartedId);\n      if (!fixtureUuid) {\n        return;\n      }\n\n      this.allureRuntime.updateFixture(fixtureUuid, (r) => {\n        r.stage = stage;\n        r.status = status;\n\n        if (error) {\n          r.statusDetails = {\n            ...r.statusDetails,\n            ...getMessageAndTraceFromError(error),\n          };\n        }\n      });\n      this.allureRuntime.stopFixture(fixtureUuid, {\n        stop: TimeConversion.timestampToMillisecondsSinceEpoch(data.timestamp),\n      });\n      this.fixtureUuids.delete(data.testCaseStartedId);\n      return;\n    }\n\n    const testUuid = this.testResultUuids.get(data.testCaseStartedId)!;\n    const currentStep = this.allureRuntime.currentStep(testUuid);\n\n    if (!currentStep) {\n      return;\n    }\n\n    this.allureRuntime.updateStep(currentStep, (r) => {\n      r.status = status;\n      r.stage = stage;\n\n      if (status === undefined) {\n        r.statusDetails = {\n          message: \"The step doesn't have an implementation.\",\n        };\n        return;\n      }\n\n      if (error) {\n        r.statusDetails = {\n          ...r.statusDetails,\n          ...getMessageAndTraceFromError(error),\n        };\n      }\n    });\n\n    this.allureRuntime.stopStep(currentStep, {\n      stop: TimeConversion.timestampToMillisecondsSinceEpoch(data.timestamp),\n    });\n  }\n\n  private onAttachment(message: messages.Attachment): void {\n    if (!message.testCaseStartedId) {\n      return;\n    }\n\n    const fixtureUuid = this.fixtureUuids.get(message.testCaseStartedId);\n    const testUuid = this.testResultUuids.get(message.testCaseStartedId);\n    const rootUuid = fixtureUuid ?? testUuid;\n    if (!rootUuid) {\n      return;\n    }\n\n    if (message.mediaType === \"application/vnd.allure.skipcucumber+json\") {\n      if (testUuid) {\n        this.allureRuntime.updateTest(testUuid, (result) => {\n          result.labels.push({ name: \"ALLURE_TESTPLAN_SKIP\", value: \"true\" });\n        });\n      }\n      return;\n    }\n\n    if (message.mediaType === ALLURE_RUNTIME_MESSAGE_CONTENT_TYPE) {\n      const parsedMessage = JSON.parse(message.body);\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      this.allureRuntime.applyRuntimeMessages(rootUuid, Array.isArray(parsedMessage) ? parsedMessage : [parsedMessage]);\n      return;\n    }\n\n    const encoding: BufferEncoding = message.contentEncoding === AttachmentContentEncoding.BASE64 ? \"base64\" : \"utf-8\";\n\n    this.allureRuntime.applyRuntimeMessages(rootUuid, [\n      {\n        type: \"attachment_content\",\n        data: {\n          name: message.fileName ?? \"Attachment\",\n          content: Buffer.from(message.body, encoding).toString(\"base64\"),\n          encoding: \"base64\",\n          contentType: message.mediaType,\n          fileExtension: message.fileName ? extname(message.fileName) : undefined,\n          wrapInStep: true,\n        },\n      },\n    ]);\n  }\n\n  private onTestRunFinished() {\n    this.allureRuntime.writeCategoriesDefinitions();\n    this.allureRuntime.writeEnvironmentInfo();\n  }\n\n  private exceptionToError(message?: string, exception?: messages.Exception): Error | undefined {\n    if (!exception) {\n      return;\n    }\n    return {\n      message: message ?? exception.message,\n      stack: exception.stackTrace,\n      name: exception.type,\n    } as Error;\n  }\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"legacy.js","names":["World","allure","AllureCucumberWorld","constructor","arguments","_defineProperty","name","value","Promise","resolve","label","type","url","link","options","parameter","description","html","descriptionHtml","id","testCaseId","historyId","allureId","displayName","content","attachment","contentType","issue","tms","epic","feature","story","suite","parentSuite","subSuite","owner","severity","layer","tag","body","step"],"sources":["../../src/legacy.ts"],"sourcesContent":["import { World } from \"@cucumber/cucumber\";\nimport * as allure from \"allure-js-commons\";\nimport type { ParameterOptions } from \"allure-js-commons\";\n\n/**\n * @deprecated please use api exported by \"allure-js-commons\" instead.\n */\nexport interface AllureCucumberLegacyApi {\n  label: (name: string, value: string) => Promise<void>;\n  link: (type: string, url: string, name?: string) => Promise<void>;\n  parameter: (name: string, value: string, options?: ParameterOptions) => Promise<void>;\n  description: (markdown: string) => Promise<void>;\n  descriptionHtml: (html: string) => Promise<void>;\n  testCaseId: (id: string) => Promise<void>;\n  historyId: (id: string) => Promise<void>;\n  allureId: (id: string) => Promise<void>;\n  displayName: (name: string) => Promise<void>;\n  attachment: (name: string, content: Buffer | string, type: string) => Promise<void>;\n  issue: (name: string, url: string) => Promise<void>;\n  tms: (name: string, url: string) => Promise<void>;\n  epic: (name: string) => Promise<void>;\n  feature: (name: string) => Promise<void>;\n  story: (name: string) => Promise<void>;\n  suite: (name: string) => Promise<void>;\n  parentSuite: (name: string) => Promise<void>;\n  subSuite: (name: string) => Promise<void>;\n  owner: (name: string) => Promise<void>;\n  severity: (name: string) => Promise<void>;\n  layer: (name: string) => Promise<void>;\n  tag: (name: string) => Promise<void>;\n  step: (name: string, body: () => Promise<void>) => Promise<void>;\n}\n\n/**\n * @deprecated please use api exported by \"allure-js-commons\" instead.\n */\nexport class AllureCucumberWorld extends World implements AllureCucumberLegacyApi {\n  /**\n   * @deprecated please use import { label } from \"allure-js-commons\" instead.\n   */\n  label = (name: string, value: string) => Promise.resolve(allure.label(name, value));\n  /**\n   * @deprecated please use import { link } from \"allure-js-commons\" instead.\n   */\n  link = (type: string, url: string, name?: string) => Promise.resolve(allure.link(url, name, type));\n  /**\n   * @deprecated please use import { parameter } from \"allure-js-commons\" instead.\n   */\n  parameter = (name: string, value: string, options?: ParameterOptions) =>\n    Promise.resolve(allure.parameter(name, value, options));\n  /**\n   * @deprecated please use import { description } from \"allure-js-commons\" instead.\n   */\n  description = (value: string) => Promise.resolve(allure.description(value));\n  /**\n   * @deprecated please use import { descriptionHtml } from \"allure-js-commons\" instead.\n   */\n  descriptionHtml = (html: string) => Promise.resolve(allure.descriptionHtml(html));\n  /**\n   * @deprecated please use import { testCaseId } from \"allure-js-commons\" instead.\n   */\n  testCaseId = (id: string) => Promise.resolve(allure.testCaseId(id));\n  /**\n   * @deprecated please use import { historyId } from \"allure-js-commons\" instead.\n   */\n  historyId = (id: string) => Promise.resolve(allure.historyId(id));\n  /**\n   * @deprecated please use import { allureId } from \"allure-js-commons\" instead.\n   */\n  allureId = (id: string) => Promise.resolve(allure.allureId(id));\n  /**\n   * @deprecated please use import { displayName } from \"allure-js-commons\" instead.\n   */\n  displayName = (name: string) => Promise.resolve(allure.displayName(name));\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  attachment = (name: string, content: Buffer | string, type: string) =>\n    Promise.resolve(allure.attachment(name, content, { contentType: type }));\n  /**\n   * @deprecated please use import { issue } from \"allure-js-commons\" instead.\n   */\n  issue = (name: string, url: string) => Promise.resolve(allure.issue(url, name));\n  /**\n   * @deprecated please use import { tms } from \"allure-js-commons\" instead.\n   */\n  tms = (name: string, url: string) => Promise.resolve(allure.tms(url, name));\n  /**\n   * @deprecated please use import { epic } from \"allure-js-commons\" instead.\n   */\n  epic = (name: string) => Promise.resolve(allure.epic(name));\n  /**\n   * @deprecated please use import { feature } from \"allure-js-commons\" instead.\n   */\n  feature = (name: string) => Promise.resolve(allure.feature(name));\n  /**\n   * @deprecated please use import { story } from \"allure-js-commons\" instead.\n   */\n  story = (name: string) => Promise.resolve(allure.story(name));\n  /**\n   * @deprecated please use import { suite } from \"allure-js-commons\" instead.\n   */\n  suite = (name: string) => Promise.resolve(allure.suite(name));\n  /**\n   * @deprecated please use import { parentSuite } from \"allure-js-commons\" instead.\n   */\n  parentSuite = (name: string) => Promise.resolve(allure.parentSuite(name));\n  /**\n   * @deprecated please use import { subSuite } from \"allure-js-commons\" instead.\n   */\n  subSuite = (name: string) => Promise.resolve(allure.subSuite(name));\n  /**\n   * @deprecated please use import { owner } from \"allure-js-commons\" instead.\n   */\n  owner = (name: string) => Promise.resolve(allure.owner(name));\n  /**\n   * @deprecated please use import { severity } from \"allure-js-commons\" instead.\n   */\n  severity = (name: string) => Promise.resolve(allure.severity(name));\n  /**\n   * @deprecated please use import { layer } from \"allure-js-commons\" instead.\n   */\n  layer = (name: string) => Promise.resolve(allure.layer(name));\n  /**\n   * @deprecated please use import { tag } from \"allure-js-commons\" instead.\n   */\n  tag = (name: string) => Promise.resolve(allure.tag(name));\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  step = (name: string, body: () => any) => Promise.resolve(allure.step(name, body));\n}\n"],"mappings":"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","ignoreList":[]}